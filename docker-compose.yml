version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
  backend:
    build:
      context: .
      dockerfile: ./server/Dockerfile
    env_file:
      - .env
    volumes:
      - ./.env:/app/.env
      - ./server/internal/db/migrations:/app/migrations
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend-network
      - frontend-network
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - frontend-network
    volumes:
      - ./client/static:/usr/share/nginx/html/static
      - ./client/templates:/usr/share/nginx/html
volumes:
  postgres_data:

networks:
  backend-network:
    internal: true
  frontend-network:
    driver: bridge